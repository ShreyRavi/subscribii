{"version":3,"sources":["webpack:///../src/components/Controls.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","of","Controls","__position","__code","__scope","Playground","Props","SubscriptionList","getCompareFunction","getAdjustedAmount","tempData","React","key","name","amount","timePeriod","date","day","month","year","notes","data","user","darkMode","sortWith","setSortWith","searchTerm","setSearchTerm","controlTimePeriod","sort","filter","datum","toLowerCase","indexOf","editSubscription","deleteSubscription","isMDXComponent"],"mappings":"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","file":"component---src-components-controls-mdx-9827cff85cd09bed83af.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/st/Code/subscribii/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport Controls from './Controls';\nimport SubscriptionList from './SubscriptionList';\nimport { getCompareFunction, getAdjustedAmount } from '../util/util';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"controls\"\n    }}>{`Controls`}</h1>\n    <p><em parentName=\"p\">{`A sorting and search bar for use to parse a list`}</em></p>\n    <Props of={Controls} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"component-description\"\n    }}>{`Component Description`}</h2>\n    <p><inlineCode parentName=\"p\">{`Controls`}</inlineCode>{` is a React component that allows parsing of a list via a text search and a sort selector.`}</p>\n    <h2 {...{\n      \"id\": \"import\"\n    }}>{`Import`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`import Controls from './Controls';\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"right\"\n          }}>{`Default`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`darkMode`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`\\`true`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"right\"\n          }}>{`false\\``}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`true`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`sortWith`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}><inlineCode parentName=\"td\">{`String`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"right\"\n          }}><inlineCode parentName=\"td\">{`'byDate'`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Sorting method`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`setSortWith`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}><inlineCode parentName=\"td\">{`Function`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"right\"\n          }}><inlineCode parentName=\"td\">{`useState`}</inlineCode>{` Function`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Sorting method edit`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`searchTerm`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}><inlineCode parentName=\"td\">{`String`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"right\"\n          }}><inlineCode parentName=\"td\">{`''`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Search term str`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`setSearchTerm`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}><inlineCode parentName=\"td\">{`Function`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"right\"\n          }}><inlineCode parentName=\"td\">{`useState`}</inlineCode>{` Function`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Search term edit`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`<Controls \n  darkMode={Boolean}\n  sortWith={String}\n  setSortWith={Function}\n  searchTerm={String}\n  setSearchTerm={Function}\n/>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"demo\"\n    }}>{`Demo`}</h2>\n    <Playground __position={1} __code={'/*See demo above*/}\\n{/*Code example below is working React for a use case of Controls*/}\\n{() => {\\n  const [data, setData] = React.useState([\\n    {\\n      key: \\'one\\',\\n      name: \\'Netflicks\\',\\n      amount: \\'14.99\\',\\n      timePeriod: \\'month\\',\\n      date: {\\n        day: 23,\\n        month: 2,\\n        year: 2020,\\n      },\\n      notes: \\'these are some notes\\',\\n    },\\n    {\\n      key: \\'two\\',\\n      name: \\'Wholoo\\',\\n      amount: \\'24.99\\',\\n      timePeriod: \\'week\\',\\n      date: {\\n        day: 12,\\n        month: 5,\\n        year: 2019,\\n      },\\n      notes: \\'these are some notes also about wholoo\\',\\n    },\\n    {\\n      key: \\'three\\',\\n      name: \\'Rent\\',\\n      amount: \\'750.00\\',\\n      timePeriod: \\'month\\',\\n      date: {\\n        day: 1,\\n        month: 7,\\n        year: 2018,\\n      },\\n      notes: \\'these are some notes also about rent\\',\\n    },\\n    {\\n      key: \\'three\\',\\n      name: \\'Rent\\',\\n      amount: \\'750.00\\',\\n      timePeriod: \\'month\\',\\n      date: {\\n        day: 1,\\n        month: 7,\\n        year: 2018,\\n      },\\n      notes: \\'these are some notes also about rent\\',\\n    },\\n  ])\\n  const [user, setUser] = React.useState(null)\\n  const [darkMode, setDarkMode] = React.useState(true)\\n  const [sortWith, setSortWith] = React.useState(\\'byDate\\')\\n  const [searchTerm, setSearchTerm] = React.useState(\\'\\')\\n  const [controlTimePeriod, setControlTimePeriod] = React.useState(\\'default\\')\\n  const getFilteredData = () => {\\n    const tempData = [...data].sort(getCompareFunction(sortWith))\\n    if (searchTerm) {\\n      return tempData.filter(\\n        datum =>\\n          datum.name.toLowerCase().indexOf(searchTerm.toLowerCase()) > -1 ||\\n          datum.notes.toLowerCase().indexOf(searchTerm.toLowerCase()) > -1,\\n      )\\n    }\\n    return tempData\\n  }\\n  return (\\n    <>\\n      <Controls\\n        darkMode={darkMode}\\n        sortWith={sortWith}\\n        setSortWith={setSortWith}\\n        searchTerm={searchTerm}\\n        setSearchTerm={setSearchTerm}\\n      />\\n      <SubscriptionList\\n        user={user}\\n        searchTerm={searchTerm}\\n        data={getFilteredData()}\\n        editSubscription={() => {}}\\n        deleteSubscription={() => {}}\\n        controlTimePeriod={controlTimePeriod}\\n      />\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Controls,\n      SubscriptionList,\n      getCompareFunction,\n      getAdjustedAmount,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {\n        /*See demo above*/\n      }\n  {\n        /*Code example below is working React for a use case of Controls*/\n      }\n  {() => {\n        const [data, setData] = React.useState([{\n          key: 'one',\n          name: 'Netflicks',\n          amount: '14.99',\n          timePeriod: 'month',\n          date: {\n            day: 23,\n            month: 2,\n            year: 2020\n          },\n          notes: 'these are some notes'\n        }, {\n          key: 'two',\n          name: 'Wholoo',\n          amount: '24.99',\n          timePeriod: 'week',\n          date: {\n            day: 12,\n            month: 5,\n            year: 2019\n          },\n          notes: 'these are some notes also about wholoo'\n        }, {\n          key: 'three',\n          name: 'Rent',\n          amount: '750.00',\n          timePeriod: 'month',\n          date: {\n            day: 1,\n            month: 7,\n            year: 2018\n          },\n          notes: 'these are some notes also about rent'\n        }, {\n          key: 'three',\n          name: 'Rent',\n          amount: '750.00',\n          timePeriod: 'month',\n          date: {\n            day: 1,\n            month: 7,\n            year: 2018\n          },\n          notes: 'these are some notes also about rent'\n        }]);\n        const [user, setUser] = React.useState(null);\n        const [darkMode, setDarkMode] = React.useState(true);\n        const [sortWith, setSortWith] = React.useState('byDate');\n        const [searchTerm, setSearchTerm] = React.useState('');\n        const [controlTimePeriod, setControlTimePeriod] = React.useState('default');\n\n        const getFilteredData = () => {\n          const tempData = [...data].sort(getCompareFunction(sortWith));\n\n          if (searchTerm) {\n            return tempData.filter(datum => datum.name.toLowerCase().indexOf(searchTerm.toLowerCase()) > -1 || datum.notes.toLowerCase().indexOf(searchTerm.toLowerCase()) > -1);\n          }\n\n          return tempData;\n        };\n\n        return <>\n        <Controls darkMode={darkMode} sortWith={sortWith} setSortWith={setSortWith} searchTerm={searchTerm} setSearchTerm={setSearchTerm} mdxType=\"Controls\" />\n        <SubscriptionList user={user} searchTerm={searchTerm} data={getFilteredData()} editSubscription={() => {}} deleteSubscription={() => {}} controlTimePeriod={controlTimePeriod} mdxType=\"SubscriptionList\" />\n      </>;\n      }}  \n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}